%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.20.5 (http://poppler.freedesktop.org)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 504 51
%%HiResBoundingBox: 0 0 504 50.85
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font Palatino-Italic
%!FontType1-1.0: Palatino-Italic
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /Palatino-Italic def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-8 -276 490 482] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57C65AD8795C36BAB48FE61BEBD3F4520730841AEF0A5DFDEC610BA
0C275E45E2298B18B98DB36128CFFF0EA388F7C786D0496498E3623B4382774E
2E202D9896FE3954FB8F816938F345B549CFDBE49F850AF4C88893FE96646691
372DD0819EA3866CF044056C85A1B6CA91675848A36CD54420BD3431EB983FBC
9882A5588D731C8EBEE89419A065DF98CAB43FB098F8C9FF8B9D8EC059C96EEF
15BAFF232104A0C2A425EDE3ABCA3749CB271CE9570C9C996916AA8C5B3176FE
5DF64CD39473F993908A7EDD8B9E151921511723E606A38196C85A193269104F
A1231EB8F6E4D0152AA8D3BC93A43DB11BE7FEDE552D8A1513D04D4063F391FE
C0D333696114EF7DE2C7C77F5A2C1DDB275A2CD70AF541E01479C39580D6E63E
DC1B3C8BD302CC924519B0CAAB5D135519F8C8CC2BFE9A1995BBA6F888176577
DDA475660FB195D658E79152A82169CF33CD84994A70F98A4673089C6A712496
F86E55CCDDB5A8EE29C665D791D759808F70FC2AEEA1299713D3EA69031048BC
2326ECDA4923025E26A82BFA66C2966E97203CD5AF6A0BAF7565465DF6793F53
BA9A90267FF5320E68BA3D04E805FA8DEC67815B242CE8E1DC77ADF6514BD7FE
86F0D0D171DC17B8D845BB8DECB83E84E7F57D0908ECB5F22DBF015441A0246F
8831758FB36DC9C3D98876DDDC97E27E2D4CA697F22A46A9CC0015C00C0E756E
C1FD0F56D8283FBBCEBD52A5855DE9399891B83B09D25260A6F82A10CC2DB50E
1216B52D7EA7AB549374060F680C6DE1E5C66F9A9D63DE3ECB344346A99AF40A
851786FE6A2BD76B970179725DE004784A0F4025B9EB1A015AA1FE004437F685
E71272B71A91332C94445F54B9C1AD0F902CF20ECEEF0346206027C8B3809DB1
9F5D7AC93A8B4C347FF84D23A67AD56FFFFE3E0A1F45
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /Palatino-Italic 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
4 w
1 J
1 j
/DeviceGray {} CS
[0] SC
2.5 254.25 m
5037.5 254.25 l
S
2520 2.5 m
2520 505.996 l
S
/DeviceRGB {} CS
[1 0 0] SC
2.5 391.207 m
19.6055 376.676 36.3945 361.773 52.8516 346.512 c
69.918 330.684 86.6211 314.473 103.199 298.137 c
120.066 281.512 136.801 264.754 153.551 248.012 c
170.258 231.312 186.984 214.629 203.898 198.137 c
220.445 182.008 237.172 166.062 254.25 150.5 c
270.648 135.559 287.371 120.973 304.602 106.996 c
320.879 93.793 337.605 81.1367 354.949 69.3633 c
371.164 58.3594 387.906 48.1367 405.301 39.1055 c
421.539 30.6719 438.32 23.2969 455.648 17.4219 c
472.043 11.8633 488.871 7.66797 506 5.17969 c
522.668 2.75391 539.531 1.96094 556.352 2.86719 c
573.344 3.78125 590.195 6.42969 606.699 10.5742 c
623.957 14.9102 640.758 20.8555 657.051 28 c
674.43 35.6211 691.188 44.582 707.398 54.4414 c
724.777 65.0156 741.508 76.6094 757.75 88.8516 c
775.039 101.887 791.762 115.652 808.102 129.855 c
825.25 144.77 841.977 160.164 858.449 175.82 c
875.441 191.965 892.168 208.391 908.801 224.906 c
925.625 241.617 942.352 258.426 959.148 275.168 c
975.809 291.77 992.535 308.301 1009.5 324.594 c
1026 340.438 1042.72 356.047 1059.85 371.211 c
1076.21 385.699 1092.93 399.777 1110.2 413.172 c
1126.45 425.777 1143.18 437.77 1160.55 448.793 c
1176.76 459.082 1193.51 468.512 1210.9 476.66 c
1227.17 484.281 1243.96 490.758 1261.25 495.66 c
1277.71 500.324 1294.55 503.543 1311.6 505.035 c
1328.36 506.5 1345.23 506.285 1361.95 504.41 c
1379.03 502.496 1395.87 498.863 1412.3 493.816 c
1429.61 488.5 1446.39 481.637 1462.65 473.668 c
1480.04 465.145 1496.79 455.371 1513 444.773 c
1530.36 433.426 1547.09 421.148 1563.35 408.285 c
1580.6 394.637 1597.32 380.34 1613.7 365.652 c
1630.8 350.312 1647.53 334.555 1664.05 318.582 c
1680.99 302.199 1697.72 285.598 1714.4 268.945 c
1731.18 252.195 1747.9 235.398 1764.75 218.723 c
1781.36 202.277 1798.09 185.945 1815.1 169.914 c
1831.55 154.41 1848.28 139.184 1865.45 124.473 c
1881.77 110.484 1898.5 96.9609 1915.8 84.2031 c
1932.04 72.2305 1948.77 60.9414 1966.15 50.7109 c
1982.37 41.168 1999.12 32.5625 2016.5 25.332 c
2032.81 18.5469 2049.62 12.9961 2066.85 9.08203 c
2083.39 5.32812 2100.25 3.10156 2117.2 2.60547 c
2134.06 2.11328 2150.92 3.33984 2167.55 6.16406 c
2184.71 9.07812 2201.54 13.6797 2217.9 19.6094 c
2235.25 25.8906 2252.02 33.6406 2268.25 42.4102 c
2285.64 51.8047 2302.38 62.3555 2318.6 73.6562 c
2335.93 85.7305 2352.66 98.6523 2368.95 112.102 c
2386.16 126.309 2402.88 141.094 2419.3 156.215 c
2436.36 171.926 2453.09 188 2469.65 204.234 c
2486.54 220.793 2503.27 237.52 2520 254.25 c
2536.73 270.977 2553.45 287.707 2570.35 304.266 c
2586.91 320.5 2603.64 336.57 2620.7 352.285 c
2637.11 367.406 2653.84 382.191 2671.05 396.398 c
2687.34 409.844 2704.07 422.766 2721.4 434.844 c
2737.62 446.145 2754.36 456.691 2771.75 466.09 c
2787.98 474.859 2804.75 482.605 2822.1 488.891 c
2838.46 494.816 2855.29 499.422 2872.45 502.336 c
2889.08 505.16 2905.94 506.383 2922.8 505.891 c
2939.75 505.398 2956.61 503.172 2973.15 499.414 c
2990.38 495.504 3007.19 489.953 3023.5 483.164 c
3040.88 475.938 3057.63 467.332 3073.85 457.789 c
3091.23 447.559 3107.96 436.27 3124.2 424.297 c
3141.5 411.539 3158.23 398.016 3174.55 384.027 c
3191.72 369.312 3208.44 354.09 3224.9 338.582 c
3241.91 322.551 3258.64 306.223 3275.25 289.777 c
3292.09 273.098 3308.82 256.301 3325.6 239.555 c
3342.28 222.902 3359.01 206.297 3375.95 189.918 c
3392.47 173.945 3409.19 158.188 3426.3 142.844 c
3442.68 128.16 3459.4 113.859 3476.65 100.215 c
3492.91 87.3477 3509.64 75.0703 3527 63.7227 c
3543.21 53.1289 3559.96 43.3555 3577.35 34.8281 c
3593.61 26.8594 3610.39 20 3627.7 14.6836 c
3644.13 9.63672 3660.97 6 3678.05 4.08594 c
3694.77 2.21484 3711.64 2 3728.4 3.46484 c
3745.45 4.95312 3762.29 8.17188 3778.75 12.8398 c
3796.04 17.7422 3812.83 24.2188 3829.1 31.8398 c
3846.49 39.9844 3863.24 49.418 3879.45 59.707 c
3896.82 70.7305 3913.55 82.7227 3929.8 95.3281 c
3947.07 108.723 3963.79 122.797 3980.15 137.285 c
3997.27 152.453 4014 168.062 4030.5 183.906 c
4047.46 200.195 4064.19 216.73 4080.85 233.332 c
4097.65 250.07 4114.38 266.879 4131.2 283.59 c
4147.83 300.109 4164.56 316.531 4181.55 332.68 c
4198.02 348.336 4214.75 363.73 4231.9 378.641 c
4248.24 392.848 4264.96 406.609 4282.25 419.645 c
4298.49 431.891 4315.22 443.484 4332.6 454.055 c
4348.81 463.918 4365.57 472.879 4382.95 480.5 c
4399.24 487.645 4416.04 493.59 4433.3 497.922 c
4449.8 502.066 4466.66 504.715 4483.65 505.633 c
4500.47 506.539 4517.33 505.742 4534 503.32 c
4551.13 500.828 4567.96 496.637 4584.35 491.078 c
4601.68 485.203 4618.46 477.828 4634.7 469.395 c
4652.09 460.363 4668.84 450.141 4685.05 439.133 c
4702.39 427.359 4719.12 414.707 4735.4 401.504 c
4752.63 387.527 4769.35 372.941 4785.75 358 c
4802.83 342.438 4819.55 326.492 4836.1 310.363 c
4853.02 293.871 4869.74 277.188 4886.45 260.488 c
4903.2 243.746 4919.93 226.988 4936.8 210.363 c
4953.38 194.023 4970.08 177.816 4987.15 161.988 c
5003.61 146.727 5020.39 131.824 5037.5 117.293 c
S
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 496.68 16.0801] Tm
0 0 Td
/F8_0 11.9552 Tf
(x)
[5.9776
0] Tj
-1.87468 TJm
-254.4 27.8398 Td
(y)
[5.9776
0] Tj
-1.87468 TJm
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font Palatino-Italic
%%EOF
